---
title: '[Day One]{style="color:darkblue"}:<br>[Infrastructures]{style="color:darkorange;"}'
subtitle: "50 min approx"
format:
  revealjs:
    width:  1648 #(3/2)
    height: 1080
    logo: img/UBEP.png
    footer: "UBEP's R training for supervisors"
    slide-number: true
    history: false
    preview-links: auto
    code-link: true
    multiplex: true
    df-print: paged
    chalkboard: 
      src: src/chalkboard-pipes-and-visualization.json
output-location: column
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(
  echo = TRUE,
  results = "hold"
)
library(countdown)
```

# Overview {style="color:darkblue;"}

## 

::: columns
::: {.column width="50%"}
### Questions

- What is an RStudio project?
- Why using RStudio projects helps?
- How works the `{here}` package, and why it is useful in combiantion with RStudio projects.
- What is a library (and a repository) of R packages, and how many of them we (can) have on a system?
- What is `{renv}`, and why it is crucial for mid- long-term projects?
- How can we activate and use `{renv}` on our R projects?
- Why organize a project in standard folders?
- What can be a suitable standard project folder organization?

:::

::: {.column width="50%"}
### Lesson Objectives

#### To be able to

- Activate, restore, a work on an RStudio projects.
- Use the `{here}` package to find files and folders within a project.
- Describe the difference from a library and a package, in R.
- Create a project powered by `{renv}`
- Use `?renv::init`, `?renv::status`, `?renv::snapshot`, and `?renv::restore`
- Organize a project in folder, in particular understand and be able to use the standard structure of (`renv/`) `R/`, `data-raw/`, and `data/`, with optional folders for `analyses/`, and `dev/`


:::
:::


# R/RStudio projects





# `{renv}`

## Glossario

- **Package**: a container for functions and data

- **Library**: a folder on a computer in which installed packages are stored

- **Repository**: a source of packages (often on Internet) 


## Repositories

Most common repository is [CRAN](https://cran.r-project.org/) (The Comprehensive R Archive Network) from which you can install packages from any R session by `install.packages()`.

Other repositories are:

- [Bioconductor](https://bioconductor.org/): focused on open source software for bioinformatics.
- [Posit Public Package Manager](https://packagemanager.posit.co/): current and snapshot versions of R and Python packages.
- [R Universe](https://r-universe.dev/search/): high-performance package server which turns GitHub organizations into repositories.

::: {.column width="50%"}
::: callout-tip
Call `getOption("repos")` to know which repository are you using in the session you are.

```{r}
getOption("repos")
```
:::
:::


## Libraries

- System: shared across all users and projects

- User: shared by all the user projects

- Project: powered by `{renv}`, is the project its own independent collection of packages

::: {.column width="50%"}
::: callout-tip
Call `.libPaths()` to know which library are you using in the session you are.

```{r}
.libPaths()
```
:::
:::



## Create projects powered by `{renv}`

To create a project powered by `{renv}` you can simply tick the corresponding option in RStudio at creation time.

![](img/rstudio-renv.png)

## Convert projects to use `{renv}`

To convert an existing project to use `{renv}` call `renv::init()`.

This creates:

- A `renv/library` folder that will be the projects library containing all the packages used within the project

- `renv.lock`  file which is the current package inventory of your projects, storing metadata of project used packages so that anyone can re-install them all (with exact the same version) on any other machine.

- A project dedicated `.Rprofile`; which is an R script that is automatically run at every R start, just before to giving you the power to interact with the R session, and it is used by `{renv}` to configure the project library in the current session.

## The `{renv}` main workflow

![The renv workflow](img/renv-workflow.png)

0. `init()`: setup the `{renv}` infrastructure
1. `install()`/`update()`/`install.packages()`: install/update packages
2. `snapshot()`: update the `renv.lock` file writing metadata about the current state of the project library
3. `restore()`: restore the library accordingly to the what is prescribed in the `renv.lock` file

> `status()`: check for differences between the `renv.lock` file and the packages installed in the project library.


## `{renv}` cache

Every `{renv}` projects starts with an empty library (there is only the `{renv}` package itself).

Working on many projects you will probably use same packages on different projects, so you will need to install them multiple times!

::: callout-important
Installing a package means:

- download it from a repository
- install (put) it in the project library

every time...

That is manage efficiently by a `{renv}` global cache, which permit to download and install a specific package (with a specific version) only once, so that installing the same package on multiple projects takes time only the first time, and it will be lighting fast in all the subsequent ones.
:::


## Your turn

::: callout-caution
## Your turn

- Connect to our [pad](https://bit.ly/ubep-rws-pad)([https://bit.ly/ubep-rws-pad](https://bit.ly/ubep-rws-pad))

- Connect to the [Day-1](https://bit.ly/ubep-rws-rstudio-day-1) project in RStudio cloud ([https://bit.ly/ubep-rws-rstudio-day-1](https://bit.ly/ubep-rws-rstudio-day-1))

...and:

Follow the instructions in the pad
:::



::: {.fragment .fade-out fragment-index="1"}
```{r}
#| echo: false
countdown(
  minutes = 5,
  left = "25%",
  right = "25%",
  top = "70%",
  bottom = 0,
  blink_colon = TRUE,
  play_sound = TRUE,
  margin = "5%",
  font_size = "4em"
)
```
:::

::: {.fragment .fade-in fragment-index="1"}
::: callout-important
0. `init()`: setup the `{renv}` infrastructure
1. `install()`/`update()`/`install.packages()`: install/update packages
2. `snapshot()`: update the `renv.lock` file writing metadata about the current state of the project library
3. `restore()`: restore the library accordingly to the what is prescribed in the `renv.lock` file

> `status()`: check for differences between the `renv.lock` file and the packages installed in the project library.

:::
:::

















# Folder organization

# Homework

## Posit's RStudio Cloud Workspace

-   Project: Day-1
-   Instructions:
    -   Go to: https://bit.ly/ubep-rws-website
    -   The text is the Day-1 assessment under the tab "Summative Assessments".
-   Script to complete on RStudio: `solution.R`

## Acknowledgment

To create the current lesson, we explored, used, and adapted content from the following resources:

-   [Carpentrie](https://carpentries.org/)'s [Programming with R](https://swcarpentry.github.io/r-novice-inflammation/) course material.
-   [Carpentrie](https://carpentries.org/)'s [R for Reproducible Scientific Analysis](https://swcarpentry.github.io/r-novice-gapminder/) course material.
-   [Hadley Wickham](https://hadley.nz/)'s [Advanced R - (2e)](https://adv-r.hadley.nz)
-   [Hadley Wickham](https://hadley.nz/)'s [R for Data Science](https://r4ds.had.co.nz/)
-   [Hadley Wickham](https://hadley.nz/)'s [R for Data Science (2e)](https://r4ds.hadley.nz/)

The slides are made using [Posit](https://posit.co/)'s [Quarto](https://quarto.org/) open-source scientific and technical publishing system powered in R by [Yihui Xie](https://yihui.org/)'s [Kintr](https://yihui.org/knitr/).

### Additional resources

-   [Hadley Wickham](https://hadley.nz/)'s [Tidyverse style guide](https://style.tidyverse.org/index.html)
-   [Hadley Wickham]()'s [answer](https://community.rstudio.com/t/why-cant-ggplot2-use/4372/7) to why `+` in `{ggplot2}` instead of *standard* pipe.

### License

```{=html}
 <p xmlns:cc="http://creativecommons.org/ns#" ><a rel="cc:attributionURL" href="https://github.com/UBESP-DCTV/2023-ecdc-rws">This work</a> by <a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://github.com/CorradoLanera">Corrado Lanera, Ileana Baldi, and Dario Gregori</a> is licensed under <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">CC BY 4.0<img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a></p> 
```
### References
