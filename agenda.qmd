---
title: "Agenda"
bibliography: packages.bib
embed-resources: true
---

## Intro

The course will alternate between face-to-face presentations and quick, continuous exercises (1-5 minute each) on the covered micro-topics.

Once participants complete a valuable set of micro-topics, they will engage in hands-on exercises. Each exercise offers an opportunity to apply what they have learned independently. Finally, the instructor will provide the "official" answer to the challenge. That not only offers a comparative learning experience but also sets the stage for the next topic. Each new chapter begins in a collaborative environment, with the official solution to the previous challenge implemented, ensuring a smooth transition and cohesive learning path.

At the end of each day, participants will have the option to tackle an longer hands-on exercise covering the day's topics; the solution will be discussed and presented in the first half-hour of the next class.

At the end of the course, we will suggest a comprehensive exercise to be done independently at home. We will send a questionnaire to participants one month later to assess the retention of the concepts presented in the course.

The whole course will be conducted using the R programming languages [@R-base], and it will introduce the main **Tidyverse** [@tidyverse2019] R-package ecosystem and philosophy for a uniform, composable, functional, and human-first design utilities to do data science. In particular, the following packages will be introduced and used during the course:

-   the `{tidyverse}` [@R-tidyverse] to activate the ecosystem on the R session

-   the RStudio projects, and the `{renv}` [@R-renv], and `{here}` [@R-here] packages for project management, reproducibility, and portability. On their side, there will be introduced the native *pipe*, with only mentioning the {magrittr} \[\@R-magrittr\], to pipe instructions in an easy-to-write/read/understand way.

-   `{ggplot2}` [@R-ggplot2] for graphics production

-   the `{rio}` [@R-rio] for data reading/import and writing/export

-   `{janitor}` [@R-janitor], and `{tidyr}` [@R-tidyr] for data cleaning at import level, and the `{dplyr}` [@R-dplyr], `{forcats}` [@R-forcats], `{lubridate}` [@R-lubridate], and `{stringr}` [@R-stringr], and `{glue}` [@R-glue] for post-import data sets and type-specific data manipulation and management.

-   `{gtsummary}` [@R-gtsummary] to create summary tables for data and models and to include table data in a report's narrative text sections directly, i.e., without copy-pasting them by hand.[^1]

[^1]: The `{flextable}` [@R-flextable] package will be not introduced explicitely because `{gtsummary}` can now manage MS Word tables as well. On the other side, it will be explained how to convert a `gtsummary` table on other formats, `flextable` included.

<!-- -->

-   R Markdown [@R-rmarkdown], `{knitr}` [@R-knitr], and Quarto [@R-quarto] to create reproducible, dynamic documents such as reports, articles, slides, and much more.

```{r}
#| include: false
knitr::write_bib(c(.packages(), "tidyverse", "ggplot2", "readr", "readxl", "writexl", "haven",  "rio", "tidyr", "janitor", "dplyr", "forcats", "glue", "magrittr", "lubridate", "stringr", "renv", "here", "gtsummary", "flextable", "rmarkdown", "knitr", "quarto"), "packages.bib")
```

## Agenda

[240' each day]{.aside}

::: panel-tabset
## Day 1

### 0. \[40'\] Intros:

-   \[10'\] Course's objectives and philosophy

-   \[5'\] Ts/TAs presentation

-   \[10'\] Course organization, teaching materials, and personalized assistance

-   \[15'\] Posit RStudio Cloud IDE presentation and setup

### 1a. \[30'\] Basic R and RStudio:

-   \[15'\] Math and Logic

-   \[15'\] Base R syntax

::: {.callout-note appearance="minimal"}
\[10'\] `BREAK`{=html}
:::

### 1b. \[60'\] Basic R and RStudio:

-   \[30'\] Base data structures

    -   Vectors (`logical`, `integer`, `double`, `character`, `factors`, `Date`, `POSIXct`)
    -   Lists (`list`, `data frame`/`tibble`)

-   \[30'\] Subsetting and Extractions

::: {.callout-note appearance="minimal"}
\[10'\] `BREAK`{=html}
:::

### 1c. \[80'\] Basic R and RStudio:

-   \[30'\] Control flow (`if`, `else`, `for`)

-   \[30'\] Functions (named and anonymous)

-   \[20'\] Packages, Tidyverse ecosystem, style, and perspectives


::: {.callout-note appearance="minimal"}
\[10'\] Recap & Assignments
:::

## Day 2

::: {.callout-note appearance="minimal"}
\[15'\] Recap & Solutions
:::

### 2. \[40'\] Infrastructures[^2]

-   \[15'\] R projects

-   \[15'\] Local environments

-   \[10'\] Files organization (dev/ folder)

::: {.callout-note appearance="minimal"}
\[10'\] `BREAK`{=html}
:::

### 3a. \[85'\] Pipe(s) and visualization [^3]

-   \[10'\] Intro to data analysis cycle loop

-   \[20'\] Function composition and pipes

-   \[55'\] Intro to `{ggplot2}`

    -   \[10'\] Tidy data, and the layered grammar of graphics.

    -   \[45'\] Base template (data, aesthetics, and geometries)

::: {.callout-note appearance="minimal"}
\[10'\] `BREAK`{=html}
:::

### 3b. \[45'\] Pipe(s) and visualization [^4]

-   \[45'\] Intro to `{ggplot2}`

    -   \[10'\] Scales

    -   \[10'\] Facets

    -   \[15'\] Labels and Themes

    -   \[10'\] Saving plots

### 4a. \[25'\] Import

-   \[25'\] Base and Tidy, and `rio`[^5] [^6]

::: {.callout-note appearance="minimal"}
\[10'\] RECAP & assignments
:::

## Day 3

::: {.callout-note appearance="minimal"}
\[15'\] RECAP & solutions
:::

### 4b. \[40'\] Import

-   \[40'\] Headers, var names, and missing data

::: {.callout-note appearance="minimal"}
\[10'\] BREAK
:::

### 5. (a) \[60'\] Transform -- manage shape[^7]

-   \[60'\] Tidy format & pivoting

::: {.callout-note appearance="minimal"}
\[10'\] BREAK
:::

### 5. (b) \[50'\] Transform -- manage dataset[^8]

-   \[15'\] select (all_of...)

-   \[15'\] filter (.data & .env)

-   \[20'\] mutate (grouped) data contents & across


### 5. (c) \[45'\] Transform -- manage formats[^9]

-   \[10'\] factors

-   \[10'\] dates

-   \[25'\] strings

::: {.callout-note appearance="minimal"}
\[10'\] RECAP & assignments
:::

## Day 4

::: {.callout-note appearance="minimal"}
\[15'\] RECAP & solutions
:::

### 6. \[90'\] Modeling (summary statistics tables)[^10]

-   \[70'\] Summary tables

    -   \[40'\] descriptive statistics

    -   \[15'\] cross-tables

    -   \[15'\] uni-variables

-   \[20'\] Merging (h) and stacking (v) tables

::: {.callout-note appearance="minimal"}
\[20'\] BREAK
:::

### 7. \[60'\] Communicate (tools: R markdown and Quarto)[^11]

-   \[20'\] (Visual) Quarto document structure

    -   \[10'\] types & creating

    -   \[5'\] header

    -   \[5'\] content

-   \[15'\] Base Markdown syntax

-   \[20'\] chunks, inline code, and inline tables content

-   \[5'\] chunk options

::: {.callout-note appearance="minimal"}
\[10'\] RECAP & final assignments
:::

::: {.callout-note appearance="minimal"}
\[20'\] OVERALL RECAP w/ a from-zero-to-hero complete live-coding example & next-month assignment
:::

::: {.callout-note appearance="minimal"}
\[10'\] end of course survey
:::

::: {.callout-note appearance="minimal"}
\[10'\] finale & continuous support access instructions
:::
:::

[^2]: pkg: {renv}, {here}

[^3]: pkg: {magrittr}, {ggplot2}

[^4]: pkg: {magrittr}, {ggplot2}

[^5]: pkgs: {readr}, {readxl}, {writexl}, {haven}

[^6]: pkg: {rio}

[^7]: pkgs: {janitor}, {tidyr}

[^8]: pkgs: {dplyr}

[^9]: pkgs: {dplyr}, {lubridate}, {stringr}, {glue}

[^10]: pkgs: {dplyr}, {gtsummary}

[^11]: The *Communicate* section is flexible. Topics from this section can be omitted to allow for more in-depth discussion on earlier sections, if needed, based on the time available.

## Bibliography
