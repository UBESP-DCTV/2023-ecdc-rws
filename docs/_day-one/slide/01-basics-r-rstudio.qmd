---
title: '[Day One]{style="color:darkblue"}:<br>[Basics of R/Rstudio, projects, and working with data files]{style="color:darkorange;"}'
subtitle: "~30 min"
format:
  revealjs:
    width:  1648 #(3/2)
    height: 1080
    logo: img/UBEP.png
    footer: "UBEP's R training for supervisors"
    slide-number: true
    history: false
    preview-links: auto
    code-link: true
    multiplex: true
    chalkboard: 
      src: src/chalkboard-presentation.json
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false
knitr::opts_chunk$set(
  echo = TRUE
)
library(tidyverse)
library(countdown)
```

# Overview {style="color:darkblue;"}

## 

::: columns
::: {.column width="50%"}
### Questions

-   What can I actually do with R?
-   How can I start working in R from scratch?
-   What are and how can I use extension packages in R?
:::

::: {.column width="50%"}
### Lesson Objectives

#### To be able to do/use

-   Basic operations in R (math, logic, assign, subsetting).
-   install, and attach packages, and getting help
:::
:::




# R basics 

## Language [side-by-side]

::: columns
::: {.column width="35%"}
|          |     |
|----------|-----|
| Comments | `#` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
# R will ignore this!!
1 + 1 # +1 also this!!
```
:::
:::

::: columns
::: {.column width="35%"}
|            |      |
|------------|------|
| Assignment | `<-` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
two <- 1 + 1
two
```
:::
:::

::: callout-important
Var names can contain letters, numbers, underscores and periods only. They must start with a letter.
:::

::: columns
::: {.column width="35%"}
|           |                  |
|-----------|------------------|
| functions | `fun(arg = val)` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
# Use `=` to assign vals to args
mean(x = c(1, 2, 3))
```
:::
:::

::: columns
::: {.column width="35%"}
|               |           |
|---------------|-----------|
| Help function | `?fun`    |
| Help operator | `?"<op>"` |
:::

::: {.column width="65%"}
::: columns
::: {.column width="50%"}
```{r}
#| eval: false
#| echo: true
#| output-location: column
?sum
?"+"
```
:::

::: {.column width="45%"}
![](img/mean-help-crop.png)
:::
:::
:::
:::

::: columns
::: {.column width="35%"}
|                |     |
|----------------|-----|
| Create vectors | `c` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
three_two_one <- c(3, two, 1)
three_two_one
```
:::
:::

::: columns
::: {.column width="35%"}
|              |      |
|--------------|------|
| List objects | `ls` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
ls()
```
:::
:::

::: columns
::: {.column width="35%"}
|                |      |
|----------------|------|
| Remove objects | `rm` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
rm(three_two_one)
ls()
```
:::
:::

::: columns
::: {.column width="35%"}
|                      |        |
|----------------------|--------|
| R's null object      | `NULL` |
| R's *missing* object | `NA`   |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
#| results: hold
NULL
NA
```
:::
:::

## Math [overview - side-by-side]

::: columns
::: {.column width="35%"}
|             |             |
|-------------|-------------|
| Brackets    | `(`, `)`    |
| Add         | `+`         |
| Subtract    | `-`         |
| Multiply    | `*`         |
| Divide      | `/`         |
| Exponent    | `^` or `**` |
| Square root | `sqrt`      |
:::

::: {.column width="65%"}
<br><br><br>

```{r}
#| output-location: column
# Standard order of precedence
5 + sqrt(4) / 2 * 3^(2 - 1)
```
:::
:::

::: columns
::: {.column width="35%"}
|           |                 |
|-----------|-----------------|
| Magnitude | `<num>E<exp10>` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
1E2
```
:::
:::

::: columns
::: {.column width="35%"}
|             |       |
|-------------|-------|
| Exponential | `exp` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
# Euler number
exp(1)
```
:::
:::

::: columns
::: {.column width="35%"}
|           |                        |
|-----------|------------------------|
| Logarithm | `log`, `log10`, `log2` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
# You can compose functions
log(exp(1))
```
:::
:::

::: columns
::: {.column width="35%"}
|     |      |
|-----|------|
| Pi  | `pi` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
pi
```
:::
:::

::: columns
::: {.column width="35%"}
|      |       |
|------|-------|
| Sine | `sin` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
sin(pi/2)
```
:::
:::

::: columns
::: {.column width="35%"}
|        |       |
|--------|-------|
| Cosine | `cos` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
cos(pi)
```
:::
:::

## Logic and tests [overview - side-by-side]

::: columns
::: {.column width="35%"}
|       |         |
|-------|---------|
| True  | `TRUE`  |
| False | `FALSE` |
| And   | `&`     |
| Or    | `|`     |
| Not   | `!`     |
:::

::: {.column width="65%"}
<br>

```{r}
#| output-location: column
# Standard order of precedence
TRUE & FALSE
```

```{r}
#| output-location: column
# Standard order of precedence
!TRUE | TRUE
```

```{r}
#| output-location: column
!(TRUE | TRUE)
```
:::
:::

::: columns
::: {.column width="35%"}
|            |                      |
|------------|----------------------|
| Comparison | `<`, `<=`, `>`, `>=` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
sum(1:3) > 4
```
:::
:::

::: columns
::: {.column width="35%"}
|                |      |
|----------------|------|
| "Exact!" Equal | `==` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
(1 + 2) == 3
```
:::
:::

::: columns
::: {.column width="35%"}
|                    |             |
|--------------------|-------------|
| Test equal numbers | `all.equal` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
3/5 == 0.6
```

```{r}
#| output-location: column
3*(1/5) == 0.6 # finite machine
```

```{r}
#| output-location: column
all.equal(3*(1/5), 0.6)
```
:::
:::

::: columns
::: {.column width="35%"}
|           |      |
|-----------|------|
| Different | `!=` |
:::

::: {.column width="65%"}
```{r}
#| output-location: column
1 != 2
```
:::
:::


## Packages

A **package** is a container of functions and data sets.

A **library** is a folder in your computer that store packages. They can be of three type:

::: foo-to-separate-the-list-from-the-below-columns
1.  project (may exists, powered by `{renv}` package... we will see that)
2.  user (may exists)
3.  system (always exists)
:::

::: columns
::: {.column width="50%"}
|                  |                     |
|------------------|---------------------|
| Install packages | `?install.packages` |
:::

::: {.column width="50%"}
```{r}
#| output-location: column
#| results: hold
install.packages("tibble")
```
:::
:::

::: columns
::: {.column width="50%"}
|                 |            |
|-----------------|------------|
| Attach packages | `?library` |
:::

::: {.column width="50%"}
```{r}
#| output-location: column
#| results: hold
library("tibble")
```
:::
:::

::: columns
::: {.column width="50%"}
|          |                                |
|----------|--------------------------------|
| Help[^5] | `help(package = "<pkg_name>")` |
:::

::: {.column width="50%"}
```{r}
#| output-location: column
#| results: hold
help(package = "tibble")
```
:::
:::

[^5]: Packages help pages include the list (with link to the corresponding documentation) of all their functions and data sets.

::: columns
::: {.column width="50%"}
::: callout-important
*Install* a package stores its R executable code in a library.<br>*Attach* a package let you able to use its functions and dataset **within the current R session**.

You need to **install** a package you want to use once only.<br>All the time you (re)start an R session, you need to **`library(<pkg>)`** again.
:::
:::

::: {.column width="50%"}
::: callout-important
Functions and data are identified by their names (which cannot be duplicate within the same package).

Attaching a package to an R session, it means to make its function and data names available for you to call/use. I.e., you have expanded the *language* (within the session)!
:::
:::
:::

## The Tidyverse

The tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.

<br>

::: columns
::: {.column width="28%"}
### Design Principles

-   Reuse existing data structures.
-   Compose simple functions with the pipe.
-   Embrace functional programming.
-   [Design for humans]{style="background-color: yellow;"}.
:::

::: {.column width="70%"}
### Packages

-   `{ggplot2}`: create data visualizations using the Grammar of Graphics.
-   `{dplyr}`: a set of verbs to solve data manipulation challenges.
-   `{tidyr}`: a set of functions that help you get to tidy data.
-   `{readr}`: a fast and friendly way to read rectangular data
-   `{purrr}`: a consistent tools suite for functional programming.
-   `{tibble}`: a modern re-imagining of the data frame.
-   `{stringr}`: a set of functions to work with strings as easy as possible.
-   `{forcats}`: a tool suite that solves common problems with factors.
-   `{lubridate}`: a tool suite to work with dates and date-times.
:::
:::


## Your turn (main: B; bk1: C; bk2: A)

::: columns
::: {.column width="50%"}

::: callout-caution
## Your turn

Connect to the Day-1 project in RStudio cloud ([https://bit.ly/ubep-rws[-rstudio]{style="color:darkorange;"}](https://bit.ly/ubep-rws-rstudio))

1.  Create a new script and write the following code in it. Save the script. (install the mentioned package first)

2. Run the script and check the result in the console. 

3. Open the help page of the `tibble` package and read it; focus more on the structure of the help page instead of the content.
:::
:::
::: {.column width="50%"}
::: callout-important
## Groups

- Main room: group B
- Brakeout room 1: group C
- Brakeout room 2: group A

:::
:::
:::

``` r
library(tidyverse)

db_tbl <- tibble(
  age = c(70, 85, 69),
  height = c(1.5, 1.72, 1.81),
  at_risk = c(TRUE, FALSE, TRUE),
  gender = factor(
    c("male", "female", "female"),
    levels = c("female", "male", "other")
  )
)
db_tbl
```



```{r}
#| echo: false
countdown(
  minutes = 15,
  left = "45%",
  right = "5%",
  top = "60%",
  bottom = "10%",
  blink_colon = TRUE,
  play_sound = TRUE,
  margin = "5%",
  font_size = "4em"
)
```

## My turn

YOU: Connect to our [pad](https://bit.ly/ubep-rws-pad-3ed)([https://bit.ly/ubep-rws[-pad-3ed]{style="color:darkorange;"}](https://bit.ly/ubep-rws-pad-3ed)) and write there questions & doubts (and if I am too slow or too fast)

ME: Connect to the Day-1 project in RStudio cloud ([https://bit.ly/ubep-rws[-rstudio]{style="color:darkorange;"}](https://bit.ly/ubep-rws-rstudio)): script `05-packages.R`





## Acknowledgment

To create the current lesson we explored, use, and adapt contents from the following resources:

-   [Carpentries](https://carpentries.org/)' [Programming with R](https://swcarpentry.github.io/r-novice-inflammation/) course material.
-   [Carpentries](https://carpentries.org/)' [R for Reproducible Scientific Analysis](https://swcarpentry.github.io/r-novice-gapminder/) course material.
-   [Hadley Wickham](https://hadley.nz/)'s [Advanced R - (2e)](https://adv-r.hadley.nz)
-   [Hadley Wickham](https://hadley.nz/)'s [R for Data Science (2e)](https://r4ds.hadley.nz/)

The slides are made using [Posit](https://posit.co/)'s [Quarto](https://quarto.org/) open-source scientific and technical publishing system powered in R by [Yihui Xie](https://yihui.org/)'s [kintr](https://yihui.org/knitr/).

### Additionl Resources

-   The [Tidyverse](https://www.tidyverse.org/)
-   RStudio cloud tutorials

### License

```{=html}
 <p xmlns:cc="http://creativecommons.org/ns#" ><a rel="cc:attributionURL" href="https://github.com/UBESP-DCTV/2023-ecdc-rws">This work</a> by <a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://github.com/CorradoLanera">Corrado Lanera, Ileana Baldi, and Dario Gregori</a> is licensed under <a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">CC BY 4.0<img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"><img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"></a></p> 
```
